/*
	copyconstructor2 
	복사생성자
		- 복사 생성자는 const 타입으로 참조를 받아야함
		- 객체를 복사할 때 호출됨
	const 참조를 받아야하는 이유
		- 값으로 전달하면 또 복사가 발생해서 무한 루프에 빠질 수 있음
		- 불필요한 복사를 방지하기 위해 참조(&)로 받아야 함
*/

/*-------------------------------------------------------------------------------------------------------------*/
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
using namespace std;
/*-------------------------------------------------------------------------------------------------------------*/

class Person
{
private:
	char name[20];
	int age;
public:
// 생성자
/*-------------------------------------------------------------------------------------------------------------*/
	Person(const char* name, int age)
	{
		cout << "constructor call!!" << endl;
		strcpy(this->name, name);
		this->age = age;
	}
/*-------------------------------------------------------------------------------------------------------------*/

// 복사 생성자
/*-------------------------------------------------------------------------------------------------------------*/
	Person(const Person& other) // Person을 참조로 전달 해줘야 한다.
	{
		cout << "copy constructor!!" << endl;
		strncpy(this->name, other.name, strlen(other.name) + 1); // strncpy == 문자열 길이 + 1(널자리)를 기입
		this->age = other.age;
	}
/*-------------------------------------------------------------------------------------------------------------*/

// 출력함수
/*-------------------------------------------------------------------------------------------------------------*/
	void printPerson()
	{
		cout << "name: " << this->name << ", " << "age: " << this->age << endl;
	}
/*-------------------------------------------------------------------------------------------------------------*/
};

/*-------------------------------------------------------------------------------------------------------------*/
int main()
{
	Person p("홍길동", 30);
	p.printPerson();

	Person p2(p);
	p2.printPerson();

	Person p3 = p;
	p3.printPerson();

	return 0;
}
/*-------------------------------------------------------------------------------------------------------------*/